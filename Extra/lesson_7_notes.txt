--------------
Псевдоелементи
--------------

Використовуються для стилізації визначених частин елемента.

Синтаксис:
    selector::pseudo-element {
        property:value;
    }

Селектор        |	Приклад         |	Опис
----------------------------------------------------------------------------------------
::after         |	p::after        |	Вставляє щось після змісту кожного елемента <p>
----------------------------------------------------------------------------------------
::before        |	p::before       |	Вставляє щось перед змістом кожного елемента <p>
----------------------------------------------------------------------------------------
::first-letter  |	p::first-letter |	Обирає першу літеру кожного елемента <p>
----------------------------------------------------------------------------------------
::first-line    |	p::first-line   |	Обирає перший рядок кожного елемента <p>
----------------------------------------------------------------------------------------
::selection     |	p::selection    |	Обирає частину елемента, яка обрана користувачем
----------------------------------------------------------------------------------------


-----------
Псевдокласи
-----------

Псевдокласи – це ключові слова, які додаються до CSS селекторів і змінюють їх стан та положення внаслідок дій користувачів.
В якості прикладу можна навести текстове посилання, яка змінює свій колір чи розмір при наведенні на нього курсора миші.
При використанні псевдокласів браузер не перевантажує поточний документ, тому за допомогою псевдокласів можна отримати різні динамічні ефекти на сторінці.


Синтаксис:
    selector:pseudo-сlass {
        property: value;
    }

Приклад:
    a:hover {
        color: red;
    }


Умовно всі псевдокласи діляться на три групи:
    - визначають стан елементів;
    - стосуються дерева документа;
    - вказують мову тексту.

Псевдокласи, що визначають стан елементів
    Псевдокласи, які розпізнають поточний стан елемента і застосовують стиль тільки для цього стану.

    Псевдоклас :active
        Спрацьовує внаслідок активації елементу користувачем.
        Наприклад, посилання стає активним, якщо навести на нього курсор і клацнути мишкою.
        Незважаючи на те, що активним може стати практично будь-який елемент веб-сторінки, псевдоклас :active використовується переважно для посилань.

    Псевдоклас :link
        Застосовується до неактивних посилань, на які користувач ще не натискав.

    Псевдоклас :focus
        Застосовується до елемента коли той отримує фокус.
        Наприклад, для текстового поля форми отримання фокусу означає, що курсор встановлений в поле і в це після можна друкувати текст.


Псевдокласи, що стосуються дерева документа
    До цієї групи належать псевдокласи, які визначають положення елемента в дереві документа і застосовують до нього стиль в залежності від його статусу.

    Псевдоклас :first-child
        Застосовує стиль до першого дочірнього елемента вказаного у селекторі.


Псевдокласи, що задають мову тексту
    Псевдоклас :lang
        Визначає мову, яка використовується в документі або його фрагменті.
        У коді HTML мова встановлюється через атрибут lang, він зазвичай додається до тегу <html>.
        За допомогою псевдокласу :lang можна задавати певні налаштування, характерні для різних мов, наприклад, вигляд лапок в цитатах.


Перелік CSS псевдокласів

Селектор                |	Приклад                 |	Опис
---------------------------------------------------------------------------------------------------------------
:active                 |	a:active                |	Обирає активне посилання
---------------------------------------------------------------------------------------------------------------
:checked                |	input:checked           |	Обирає кожен перевірений елемент <input>
---------------------------------------------------------------------------------------------------------------
:disabled               |	input:disabled          |	Обирає кожен відключений елемент <input>
---------------------------------------------------------------------------------------------------------------
:empty                  |	p:empty                 |	Обирає кожен елемент <p> який не має дочірніх елементів
---------------------------------------------------------------------------------------------------------------
:enabled                |	input:enabled           |	Обирає кожен включений елемент <input>
---------------------------------------------------------------------------------------------------------------
:first-child            |	p:first-child           |	Обирає кожен елемент <p>, який є першим дочірнім елементом свого предка.
---------------------------------------------------------------------------------------------------------------
:first-of-type          |  	p:first-of-type         |	Обирає кожен елемент <p>, який є першим елементом <p> свого предка
---------------------------------------------------------------------------------------------------------------
:focus                  |	input:focus             |	Обирає елемент <input>, який має фокус
---------------------------------------------------------------------------------------------------------------
:hover                  |	a:hover                 |	Обирає посилання при наведенні миші
---------------------------------------------------------------------------------------------------------------
:in-range               |	input:in-range          |	Обирає елементи <input> зі значенням у вказаному діапазоні
---------------------------------------------------------------------------------------------------------------
:invalid                |	input:invalid           |	Обирає всі елементи <input> з недопустимим значенням
---------------------------------------------------------------------------------------------------------------
:lang                   |	p:lang(it)              |	Обирає кожен елемент <p> зі значенням атрибута lang, що починається з "it"
---------------------------------------------------------------------------------------------------------------
:last-child             |	p:last-child            |	Обирає кожен елемент <p>, який є останнім дочірнім елементом свого предка.
---------------------------------------------------------------------------------------------------------------
:last-of-type           |	p:last-of-type          |	Обирає кожен елемент <p> який є останнім елементом <p> свого предка
---------------------------------------------------------------------------------------------------------------
:link                   |	a:link                  |	Обирає всі не відвідувані посилання
---------------------------------------------------------------------------------------------------------------
:not(selector)          |	:not(p)                 |	Обирає кожен елемент, який не є елементом <p>
---------------------------------------------------------------------------------------------------------------
:nth-child(n)           |	p:nth-child(2)          |	Обирає кожен елемент <p> який є другим дочірнім елементом свого предка.
---------------------------------------------------------------------------------------------------------------
:nth-last-child(n)      |	p:nth-last-child(2)     |	Обирає кожен елемент <p> який є другим дочірнім елементом свого предка, рахуючи від останнього дочірнього елемента
---------------------------------------------------------------------------------------------------------------
:nth-last-of-type(n)    |	p:nth-last-of-type(2)   |	Обирає кожен елемент <p> який є другим елементом <p> свого предка, рахуючи від останнього нащадка
---------------------------------------------------------------------------------------------------------------
:nth-of-type(n)         |	p:nth-of-type(2)        |	Обирає кожен елемент <p>, який є другим елементом <p> свого предка
---------------------------------------------------------------------------------------------------------------
:only-of-type           |	p:only-of-type          |	Обирає кожен елемент <p> який є єдиним елементом <p> свого предка
---------------------------------------------------------------------------------------------------------------
:only-child             |	p:only-child            |	Обирає кожен елемент <p> який є єдиним нащадком свого предка
---------------------------------------------------------------------------------------------------------------
:optional               |	input:optional          |	Обирає елементи <input> без атрибута "required"
---------------------------------------------------------------------------------------------------------------
:out-of-range           |	input:out-of-range      |	Обирає елементи <input> зі значенням поза вказаним діапазоном
---------------------------------------------------------------------------------------------------------------
:read-only              |	input:read-only         |	Обирає елементи <input> зі вказаним атрибутом "readonly"
---------------------------------------------------------------------------------------------------------------
:read-write             |	input:read-write        |	Обирає елементи <input> без атрибута "readonly"
---------------------------------------------------------------------------------------------------------------
:required               |	input:required          |	Обирає елементи <input> зі вказаним атрибутом "required"
---------------------------------------------------------------------------------------------------------------
:root                   |	root                    |	Обирає кореневий елемент документа
---------------------------------------------------------------------------------------------------------------
:target                 |	#news:target            |	Обирає поточний активний елемент #news (при натисканні на URL-адресу, що містить це ім’я якоря)
---------------------------------------------------------------------------------------------------------------
:valid                  |	input:valid             |	Обирає всі елементи <input> з допустимим значенням
---------------------------------------------------------------------------------------------------------------
:visited                |	a:visited               |	Обирає всі відвідані посилання
---------------------------------------------------------------------------------------------------------------



Для підключення локальних шрифтів у проєкт, необхідно у верхній частині CSS файлу додати:
    @font-face {
        src: url(./assets/fonts/Roboto.ttf);
        font-family: Roboto;
    }

    src вказує шлях до файлу з шрифтом;
    font-family задає назву, за якою можна буде в подальшому задавати цей шрифт.

