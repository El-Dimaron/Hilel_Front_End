Базова інформація

HTML (Hypertext Markup Language) - базовий будівельний блок веб-сторінки.

HTTP і HTTPS — це протоколи, які браузер використовує для обміну даними з веб-сервером.
    HTTP (HyperText Transfer Protocol)
        Основний протокол передачі даних у вебі.
        Використовує порт 80.
        Передає дані у відкритому вигляді (plain text).
        Недоліки: будь-хто "посередині" (наприклад, у публічному Wi-Fi) може підслухати, що ти вводиш: паролі, логіни, повідомлення.
            http://example.com/page

    HTTPS (HyperText Transfer Protocol Secure)
        Це той самий HTTP, але поверх шифрування TLS/SSL.
        Використовує порт 443.
        Переваги:
            Шифрування – дані передаються у зашифрованому вигляді.
            Автентифікація – сайт має сертифікат, що підтверджує його справжність.
            Цілісність даних – не можна підмінити вміст сторінки "по дорозі".
        https://example.com/page
        У браузері https позначається замочком біля адреси.

    Чому HTTPS є обов’язковим сьогодні:
        Захищає паролі, банківські дані, повідомлення.
        Google ранжує HTTPS-сайти вище у пошуку.
        Сучасні браузери позначають сайти з http:// як “Not Secure”.

    Підсумок:
    HTTP – відкритий, незахищений.
    HTTPS – шифрований, безпечний, стандарт у сучасному вебі.


HyperText
    HyperText буквально означає гіпертекст — текст, який містить посилання (гіперпосилання) на інші тексти/ресурси.
    На відміну від звичайного лінійного тексту (книга → сторінка → наступна сторінка), гіпертекст дозволяє нелінійне пересування:
    ти можеш клікнути і перейти до іншої частини документа або зовсім на інший документ.

    Це і є основа вебу: перехід між сторінками через <a href="...">.

    HyperText у HTML
        HTML = HyperText Markup Language → Мова розмітки гіпертексту.
        HTML створений для структурування гіпертекстових документів у вебі.
        Його ключова "фішка" від самого початку — теги посилань (<a>) та можливість зв’язувати документи між собою.

    HyperText у HTTP/HTTPS
        HTTP = HyperText Transfer Protocol → Протокол передачі гіпертексту.
        Протокол був створений для передачі документів, розмічених HTML.
        Сьогодні HTTP/HTTPS передає не тільки гіпертекст (HTML), а й будь-які дані: JSON, зображення, відео, API-запити тощо.
        Але історично назва залишилася.

    Важливий нюанс:
        Гіпертекст = не просто "текст у браузері", а текст + зв’язки між ним (посилання).

    Тому HTML — це мова для створення таких документів, а HTTP — транспорт, який цей гіпертекст доставляє від сервера до клієнта


Протоколи TCP/IP — це основа, на якій працюють і HTTP/HTTPS, і пошта (SMTP), і майже всі інші сервіси в мережі.
    IP (Internet Protocol)
        IP відповідає за адресацію та доставку пакетів даних.
        Як поштова служба: він знає адресу відправника й отримувача та доставляє “конверт”.

        Основні функції:
        Визначає унікальні IP-адреси пристроїв (наприклад, 192.168.1.10 або IPv6 2001:db8::1).
        Розбиває дані на пакети і маршрутизує їх через мережу.
        Мінус: IP не гарантує, що пакет дійде або що він дійде у правильному порядку.

    TCP (Transmission Control Protocol)
        TCP працює поверх IP і вирішує його проблеми.
        
        Це “менеджер доставки”:
            гарантує, що всі пакети дійдуть,
            перевіряє, чи не пошкодилися дані,
            збирає пакети у правильному порядку.

        Як працює TCP:
            Рукостискання (handshake) – клієнт і сервер домовляються про з’єднання.
            Передача даних – пакети йдуть один за одним; якщо щось загубилося, TCP вимагає повторної відправки.
            Закриття з’єднання – сторони коректно “розривають” зв’язок.
        
        Завдяки цьому, протоколи на кшталт HTTP чи HTTPS отримують надійний канал зв’язку.

    Чому кажуть “TCP/IP”
        TCP/IP — це не один протокол, а стек (набір) мережевих протоколів, які працюють разом.
        IP відповідає за доставку, а TCP — за надійність і впорядкованість.
        Часто до TCP/IP відносять цілий набір: TCP, UDP, IP, ICMP, DNS, DHCP тощо.

    Приклад у реальному житті:
        Ти відкриваєш браузер і вводиш https://example.com.
        DNS знаходить IP-адресу сервера.
        IP знає, куди слати пакети (адресація).
        TCP створює надійний канал зв’язку між тобою і сервером.
        Поверх TCP працює TLS (для HTTPS) → шифрування.
        Поверх TLS працює HTTP → передача сторінки.

    Підсумок
        IP = адресація та доставка (як пошта).
        TCP = контроль доставки (щоб нічого не загубилося і було у правильному порядку).



Базові теги html:
https://far-character-edd.notion.site/HTML-1b943cee0f6b49f7a6c972e15ba9a7d1

Основні правила написання HTML тегів:
    1) Будь-який тег має бути обрамлений знаками “<” та “>”
    2) Всі теги пишуться з маленької літери.
    3) Теги бувають парними (<p>Hello Hillel</p>) і непарними (<hr>).

Примітка щодо непарних тегів:
    Тег <hr> належить до так званих порожніх (непарних) тегів (void elements) у HTML.
    Вони не мають внутрішнього контенту (на відміну від <p> чи <div>), тому їм не потрібен закриваючий тег (</hr> не існує).

    До таких тегів належать:
    <img>, <br>, <hr>, <input>, <meta>, <link>, <source>, <embed> тощо.

    У HTML5 стандарт дозволяє писати просто:
        <img src="car.png" alt="Авто">
        І браузер це розуміє як завершений тег.

    У XHTML (старіший, стримкіший стандарт, який "імітував XML") вимагався самозакриваючий варіант:
        <img src="car.png" alt="Авто" />
        Там слеш перед > був обов’язковим.

    Але HTML5 не такий строгий — він "прощаючий": і <img> і <img /> вважаються валідними. Написання непарного тегу без слеша в HTML5 це валідний код.
    Слеш (/>) зараз — лише "звичка" або стилістичний вибір (часто використовується для кращої сумісності, але не обов’язково).
    Тому зараз можна писати <hr> або <hr /> - обидва варіанти валідні.


Базові теги:
    <!DOCTYPE html>
        Вказує на те що вміст файлу буде HTML. (Тип документа HTML).
        Це необхідно, щоб браузер розумів, як слід інтерпретувати поточну вебсторінку.

    <html>
        Фундаментальний тег на HTML сторінці.
        Все що буде стосуватись нашої веб-сторінки буде знаходитись в середині тега <html>
        Тег <html> в собі містить також два важливих теги: <head> і <body>
    
    <head>
        В цьому тегі розміщюються такі теги як: <title>, <meta> та інші.

        <title>
            Визначає заголовок документа - текст, який буде відображатись на самій вкладці в браузері.

        <meta>
            Зберігає інформацію призначену для браузера.


Приклад базового html документу:
    <!DOCTYPE html>
    <html>
        <head>
            <title>My HTML Document</title>
            <meta charset="UTF-8" />
        </head>
        <body>
        ...
        </body>
    </html>



Атрибути тегів:
https://far-character-edd.notion.site/3328d268207b4584868c208264e8f42c

Атрибут - додаткова інформація для налаштування поведінки або візуального відображення HTML-елементів на веб-сторінці.

Атрибут завжди повинен мати:
    1. Пробіл між ним та іменем елемента (або попереднім атрибутом, якщо елемент вже має один або кілька атрибутів);
    2. Ім'я атрибута, за яким слідує знак рівності;
    3. Значення атрибута, яке обов’язково має бути виділене лапками з двох сторін.

Зображення <img />:
    Непарний тег img має два обов'язкових атрибута: src і alt.
    1) src - шлях до зображення;
    2) alt - альтернативний текст для зображення (якщо зображення не було знайдене або шлях був написаний некоректно).
        Якщо не вказати alt, користувачі з екранними рідерами або при помилці завантаження зображення не буде отримано жодної інформації.

    Приклад:
        1. <img src="./img/homelander.png" alt="Example image">
        2. <img src="https://google.com/picture/homelander.png" alt="Example image">

    Додаткові атрибути
        width/height — розміри (у пікселях або відсотках);
        title — текст підказки при наведенні;
        loading — контроль завантаження (lazy, eager);
        class/id — для стилізації через CSS.

Посилання <a></a>:
    <a href="https://google.com/">Google URL address</a>

        href – головний атрибут, куди веде посилання.
        Текст між <a> і </a> – це клікабельна частина (може бути текст, картинка або кнопка зі стилями).

    Додаткові атрибути:
        class - використання як кнопки (через CSS)
            <a href="/signup" class="btn">Зареєструватися</a>

        <a href="https://google.com" target="_blank" rel="noopener" title="Перейти на головну сторінку">Google</a>
            target – спосіб відкриття:
                _self _self (за замовчуванням) – відкриває посилання у цій самій вкладці;
                _blank – відкриває у новій вкладці/вікні;
                _parent – відкриває посилання у батьківському фреймі (актуально, якщо сторінка відкрита у <iframe>);
                _top – відкриває у повному вікні браузера, ігноруючи вкладені фрейми.
            
            rel - визначає відношення між сторінкою та посиланням. Особливо важливий у поєднанні з target="_blank".
                nofollow – пошукові системи не враховують посилання для SEO. Використовують, коли не хочемо передавати "вагу" сайту (наприклад, у рекламі).
                noopener – захищає від атаки tabnabbing. Коли відкриваєш у новій вкладці (_blank), без цього хакерський сайт може змінити вміст твоєї вкладки з вихідним сайтом.
                noreferrer – додатково приховує адресу сайту, з якого користувач перейшов (реферер).
                
                Найбезпечніший комбо-варіант для зовнішніх посилань:
                    <a href="https://example.com" target="_blank" rel="noopener noreferrer">Зовнішнє посилання</a>
            
            title - показує підказку (tooltip) при наведенні курсора.

            href="#id" - якір (anchor) використовується для прокрутки сторінки до елемента з певним id
                <h2 id="contacts">Контакти</h2>
                <a href="#contacts">До контактів</a>
        
            download – підкаже браузеру завантажити файл, а не відкривати.
                <a href="docs/manual.pdf" download>Download instruction</a>

    В посиланні так само можна використовувати абсолютний або відносний шлях.
    Відносний шлях у посиланні - інша html сторінка, яка знаходиться локально на комп’ютері.


Шляхи бувають двох видів: відносні (1) і абсолютні (2).

Абсолютний шлях
    Використовують частіше за все для посилань які ведуть на інші веб-сторінки.
    Складається з протоколу (http, https), доменного імені (google.com), і шляху до зображення.

Відносний шлях
    Використовується для знаходження зображення відносно поточного файлу (в якому пишеться код).
    Навігація відносного шляху:
        ./ - базова команда, яка вказує, що шлях відносний - вказує на поточну папку (ту, в якій знаходиться наш файл);
        ./img/example_image.png - в поточній папці переходимо в папку img -> далі вказуємо зображення example_image.png;
        ../ - перехід на папку вище (батьківську папку, або папку вище) - цей тег може бути першим у відносному шляху, або одним з наступних елементів;



Теги html:
https://far-character-edd.notion.site/HTML-2242806d7b2d4a6cb038ca39d97edd40

Заголовки <h1>, <h2> ... <h6>:
    <h1>Header h1</h1>
    <h2>Header h2</h2>
    ...
    <h6>Header h6</h6>

    <h1> — головний заголовок сторінки, використовується лише 1 раз (SEO та доступність).
    <h2> ... <h6> — підзаголовки, будують ієрархію документа.
    
    Наприклад:
        <h1> → назва сторінки
        <h2> → розділи
        <h3> → підрозділи
    Не для візуального збільшення тексту, а для структури контенту.

Контейнерні теги <div> і <span>:
    <div> — блочний елемент: займає всю ширину рядка, "контейнер" для інших елементів.
        Використовується для структури сторінки.
        Приклад: <div>Hi there</div>

    <span> — стрічковий елемент: займає лише стільки місця, скільки тексту всередині.
        Використовується для стилізації частини тексту чи дрібних елементів.
        Приклад: <span>How are you?</span>

    Обидва теги самі по собі “порожні”, сенсу їм додає CSS або JS.

Абзац <p>:
    Відображає блок тексту.
    Має стандартні відступи зверху і знизу (браузери додають автоматично).
    Всередині <p> можна використовувати інлайн-теги (<a>, <span>, <strong>, <em>).
    <p>Big brother is watching you!</p>

Посилання <a>:
    <a href="https://google.com">Google link</a>

Зображення <img>:
    Непарний тег (без закриваючого тегу):
        <img src="https://google.com/picture/homelander.png" alt="Example image" />

Списки <ul> і <li>:
    <ul>
        <li>Have a good wank</li>
        <li>Take a rest</li>
        <li>Do nothing</li>
    </ul>

    Використовуєтся для відображення списку на сторінці.
        <ul> — unordered list (невпорядкований, з маркерами).
        <li> — елемент списку.
        
    Є ще <ol> (ordered list) — нумерований список.

Перенос рядка <br>:
    <p>What am I doing here?<br>I guess we'll never know.</p>
    
    Виконує "жорсткий" перенос тексту всередині абзацу.
    Використовується там, де потрібен саме розрив рядка, а не новий абзац.

Горизонтальна лінія <hr>:
    Малює горизонтальний розділювач.
    Має семантичний сенс: "тематичний поділ контенту".
    Можна стилізувати через CSS (товщина, колір, стиль лінії).

Виділення цитованого тексту <blockquote>:
    Вказує, що це цитата або витяг з іншого джерела.

Виділяє тексту жирним: <strong>

Виділяє текст як курсив: <em>